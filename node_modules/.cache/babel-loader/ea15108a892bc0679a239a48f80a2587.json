{"ast":null,"code":"import React,{useState,useRef}from'react';import useTransactions from'../hooks/useTransactions';const AddTransaction=()=>{// State to manage the type of transaction (Income, Expense, Savings)\nconst[type,setType]=useState('Income');// State to manage the amount of the transaction\nconst[amount,setAmount]=useState('');// State to manage the category of the transaction\nconst[category,setCategory]=useState('');// Custom hook to add a new transaction\nconst{addTransaction}=useTransactions();// Ref to focus on the amount input after submitting the form\nconst amountRef=useRef(null);// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();// Prevent the default form submit behavior\n// Create a new transaction object\nconst newTransaction={id:Date.now(),// Unique id based on current timestamp\ntype,amount:parseFloat(amount),// Convert amount to a number\ncategory};// Add the new transaction using the custom hook\naddTransaction(newTransaction);// Clear the form fields\nsetAmount('');setCategory('');// Focus back on the amount input field\namountRef.current.focus();};return/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Type:\"),/*#__PURE__*/React.createElement(\"select\",{value:type,onChange:e=>setType(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{value:\"Income\"},\"Income\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Expense\"},\"Expense\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Savings\"},\"Savings\"))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Amount:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:amount,onChange:e=>setAmount(e.target.value),ref:amountRef// Reference to focus on this input after submit\n})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Category:\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",value:category,onChange:e=>setCategory(e.target.value)})),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Add Transaction\"));};export default AddTransaction;","map":{"version":3,"names":["React","useState","useRef","useTransactions","AddTransaction","type","setType","amount","setAmount","category","setCategory","addTransaction","amountRef","handleSubmit","e","preventDefault","newTransaction","id","Date","now","parseFloat","current","focus","createElement","onSubmit","value","onChange","target","ref"],"sources":["/Users/HP/Desktop/fullstack/Finance/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport useTransactions from '../hooks/useTransactions';\n\nconst AddTransaction = () => {\n  // State to manage the type of transaction (Income, Expense, Savings)\n  const [type, setType] = useState('Income');\n  \n  // State to manage the amount of the transaction\n  const [amount, setAmount] = useState('');\n  \n  // State to manage the category of the transaction\n  const [category, setCategory] = useState('');\n  \n  // Custom hook to add a new transaction\n  const { addTransaction } = useTransactions();\n  \n  // Ref to focus on the amount input after submitting the form\n  const amountRef = useRef(null);\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent the default form submit behavior\n\n    // Create a new transaction object\n    const newTransaction = {\n      id: Date.now(), // Unique id based on current timestamp\n      type,\n      amount: parseFloat(amount), // Convert amount to a number\n      category,\n    };\n    \n    // Add the new transaction using the custom hook\n    addTransaction(newTransaction);\n    \n    // Clear the form fields\n    setAmount('');\n    setCategory('');\n    \n    // Focus back on the amount input field\n    amountRef.current.focus();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Type:</label>\n        <select value={type} onChange={(e) => setType(e.target.value)}>\n          <option value=\"Income\">Income</option>\n          <option value=\"Expense\">Expense</option>\n          <option value=\"Savings\">Savings</option>\n        </select>\n      </div>\n      <div>\n        <label>Amount:</label>\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          ref={amountRef} // Reference to focus on this input after submit\n        />\n      </div>\n      <div>\n        <label>Category:</label>\n        <input\n          type=\"text\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        />\n      </div>\n      <button type=\"submit\">Add Transaction</button>\n    </form>\n  );\n};\n\nexport default AddTransaction;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC/C,MAAO,CAAAC,eAAe,KAAM,0BAA0B,CAEtD,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B;AACA,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGL,QAAQ,CAAC,QAAQ,CAAC,CAE1C;AACA,KAAM,CAACM,MAAM,CAAEC,SAAS,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAExC;AACA,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE5C;AACA,KAAM,CAAEU,cAAe,CAAC,CAAGR,eAAe,CAAC,CAAC,CAE5C;AACA,KAAM,CAAAS,SAAS,CAAGV,MAAM,CAAC,IAAI,CAAC,CAE9B;AACA,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAE;AAEpB;AACA,KAAM,CAAAC,cAAc,CAAG,CACrBC,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE;AAChBd,IAAI,CACJE,MAAM,CAAEa,UAAU,CAACb,MAAM,CAAC,CAAE;AAC5BE,QACF,CAAC,CAED;AACAE,cAAc,CAACK,cAAc,CAAC,CAE9B;AACAR,SAAS,CAAC,EAAE,CAAC,CACbE,WAAW,CAAC,EAAE,CAAC,CAEf;AACAE,SAAS,CAACS,OAAO,CAACC,KAAK,CAAC,CAAC,CAC3B,CAAC,CAED,mBACEtB,KAAA,CAAAuB,aAAA,SAAMC,QAAQ,CAAEX,YAAa,eAC3Bb,KAAA,CAAAuB,aAAA,yBACEvB,KAAA,CAAAuB,aAAA,cAAO,OAAY,CAAC,cACpBvB,KAAA,CAAAuB,aAAA,WAAQE,KAAK,CAAEpB,IAAK,CAACqB,QAAQ,CAAGZ,CAAC,EAAKR,OAAO,CAACQ,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,eAC5DzB,KAAA,CAAAuB,aAAA,WAAQE,KAAK,CAAC,QAAQ,EAAC,QAAc,CAAC,cACtCzB,KAAA,CAAAuB,aAAA,WAAQE,KAAK,CAAC,SAAS,EAAC,SAAe,CAAC,cACxCzB,KAAA,CAAAuB,aAAA,WAAQE,KAAK,CAAC,SAAS,EAAC,SAAe,CACjC,CACL,CAAC,cACNzB,KAAA,CAAAuB,aAAA,yBACEvB,KAAA,CAAAuB,aAAA,cAAO,SAAc,CAAC,cACtBvB,KAAA,CAAAuB,aAAA,UACElB,IAAI,CAAC,QAAQ,CACboB,KAAK,CAAElB,MAAO,CACdmB,QAAQ,CAAGZ,CAAC,EAAKN,SAAS,CAACM,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC3CG,GAAG,CAAEhB,SAAW;AAAA,CACjB,CACE,CAAC,cACNZ,KAAA,CAAAuB,aAAA,yBACEvB,KAAA,CAAAuB,aAAA,cAAO,WAAgB,CAAC,cACxBvB,KAAA,CAAAuB,aAAA,UACElB,IAAI,CAAC,MAAM,CACXoB,KAAK,CAAEhB,QAAS,CAChBiB,QAAQ,CAAGZ,CAAC,EAAKJ,WAAW,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE,CAC9C,CACE,CAAC,cACNzB,KAAA,CAAAuB,aAAA,WAAQlB,IAAI,CAAC,QAAQ,EAAC,iBAAuB,CACzC,CAAC,CAEX,CAAC,CAED,cAAe,CAAAD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}