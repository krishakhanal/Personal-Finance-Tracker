{"ast":null,"code":"var _jsxFileName = \"/Users/HP/Desktop/fullstack/Finance/src/components/AddTransaction.js\";\nimport React, { useState, useRef } from 'react';\nimport useTransactions from '../hooks/useTransactions';\nconst AddTransaction = () => {\n  // State to manage the type of transaction (Income, Expense, Savings)\n  const [type, setType] = useState('Income');\n\n  // State to manage the amount of the transaction\n  const [amount, setAmount] = useState('');\n\n  // State to manage the category of the transaction\n  const [category, setCategory] = useState('');\n\n  // Custom hook to add a new transaction\n  const {\n    addTransaction\n  } = useTransactions();\n\n  // Ref to focus on the amount input after submitting the form\n  const amountRef = useRef(null);\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submit behavior\n\n    // Create a new transaction object\n    const newTransaction = {\n      id: Date.now(),\n      // Unique id based on current timestamp\n      type,\n      amount: parseFloat(amount),\n      // Convert amount to a number\n      category\n    };\n\n    // Add the new transaction using the custom hook\n    addTransaction(newTransaction);\n\n    // Clear the form fields\n    setAmount('');\n    setCategory('');\n\n    // Focus back on the amount input field\n    amountRef.current.focus();\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: type,\n    onChange: e => setType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Income\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Expense\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Expense\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Savings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Savings\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Amount:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    ref: amountRef // Reference to focus on this input after submit\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Category:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Add Transaction\"));\n};\nexport default AddTransaction;","map":{"version":3,"names":["React","useState","useRef","useTransactions","AddTransaction","type","setType","amount","setAmount","category","setCategory","addTransaction","amountRef","handleSubmit","e","preventDefault","newTransaction","id","Date","now","parseFloat","current","focus","createElement","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","ref"],"sources":["/Users/HP/Desktop/fullstack/Finance/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport useTransactions from '../hooks/useTransactions';\n\nconst AddTransaction = () => {\n  // State to manage the type of transaction (Income, Expense, Savings)\n  const [type, setType] = useState('Income');\n  \n  // State to manage the amount of the transaction\n  const [amount, setAmount] = useState('');\n  \n  // State to manage the category of the transaction\n  const [category, setCategory] = useState('');\n  \n  // Custom hook to add a new transaction\n  const { addTransaction } = useTransactions();\n  \n  // Ref to focus on the amount input after submitting the form\n  const amountRef = useRef(null);\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault(); // Prevent the default form submit behavior\n\n    // Create a new transaction object\n    const newTransaction = {\n      id: Date.now(), // Unique id based on current timestamp\n      type,\n      amount: parseFloat(amount), // Convert amount to a number\n      category,\n    };\n    \n    // Add the new transaction using the custom hook\n    addTransaction(newTransaction);\n    \n    // Clear the form fields\n    setAmount('');\n    setCategory('');\n    \n    // Focus back on the amount input field\n    amountRef.current.focus();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label>Type:</label>\n        <select value={type} onChange={(e) => setType(e.target.value)}>\n          <option value=\"Income\">Income</option>\n          <option value=\"Expense\">Expense</option>\n          <option value=\"Savings\">Savings</option>\n        </select>\n      </div>\n      <div>\n        <label>Amount:</label>\n        <input\n          type=\"number\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          ref={amountRef} // Reference to focus on this input after submit\n        />\n      </div>\n      <div>\n        <label>Category:</label>\n        <input\n          type=\"text\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        />\n      </div>\n      <button type=\"submit\">Add Transaction</button>\n    </form>\n  );\n};\n\nexport default AddTransaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}