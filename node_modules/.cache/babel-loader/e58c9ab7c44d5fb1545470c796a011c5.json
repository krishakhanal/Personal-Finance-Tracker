{"ast":null,"code":"var _jsxFileName = \"/Users/HP/Desktop/fullstack/Finance/src/components/Reports.js\";\nimport React, { useMemo } from 'react';\nimport useTransactions from '../hooks/useTransactions';\nconst Reports = () => {\n  // Destructure transactions from the custom hook\n  const {\n    transactions\n  } = useTransactions();\n\n  // Calculate total income using useMemo to avoid recalculating on every render\n  const totalIncome = useMemo(() => {\n    return transactions.filter(t => t.type === 'Income') // Filter transactions for type 'Income'\n    .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  // Calculate total expenses using useMemo\n  const totalExpenses = useMemo(() => {\n    return transactions.filter(t => t.type === 'Expense') // Filter transactions for type 'Expense'\n    .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  // Calculate total savings using useMemo\n  const totalSavings = useMemo(() => {\n    return transactions.filter(t => t.type === 'Savings') // Filter transactions for type 'Savings'\n    .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Reports\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Total Income: \", totalIncome), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Total Expenses: \", totalExpenses), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Total Savings: \", totalSavings));\n};\nexport default Reports;","map":{"version":3,"names":["React","useMemo","useTransactions","Reports","transactions","totalIncome","filter","t","type","reduce","sum","amount","totalExpenses","totalSavings","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/HP/Desktop/fullstack/Finance/src/components/Reports.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport useTransactions from '../hooks/useTransactions';\n\nconst Reports = () => {\n  // Destructure transactions from the custom hook\n  const { transactions } = useTransactions();\n\n  // Calculate total income using useMemo to avoid recalculating on every render\n  const totalIncome = useMemo(() => {\n    return transactions\n      .filter(t => t.type === 'Income') // Filter transactions for type 'Income'\n      .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  // Calculate total expenses using useMemo\n  const totalExpenses = useMemo(() => {\n    return transactions\n      .filter(t => t.type === 'Expense') // Filter transactions for type 'Expense'\n      .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  // Calculate total savings using useMemo\n  const totalSavings = useMemo(() => {\n    return transactions\n      .filter(t => t.type === 'Savings') // Filter transactions for type 'Savings'\n      .reduce((sum, t) => sum + t.amount, 0); // Sum up the amounts\n  }, [transactions]); // Recalculate only when transactions change\n\n  return (\n    <div>\n      <h2>Reports</h2>\n      <p>Total Income: {totalIncome}</p>\n      <p>Total Expenses: {totalExpenses}</p>\n      <p>Total Savings: {totalSavings}</p>\n    </div>\n  );\n};\n\nexport default Reports;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,eAAe,MAAM,0BAA0B;AAEtD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB;EACA,MAAM;IAAEC;EAAa,CAAC,GAAGF,eAAe,CAAC,CAAC;;EAE1C;EACA,MAAMG,WAAW,GAAGJ,OAAO,CAAC,MAAM;IAChC,OAAOG,YAAY,CAChBE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,QAAQ,CAAC,CAAC;IAAA,CACjCC,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,MAAMQ,aAAa,GAAGX,OAAO,CAAC,MAAM;IAClC,OAAOG,YAAY,CAChBE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,CAAC,CAAC;IAAA,CAClCC,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACA,MAAMS,YAAY,GAAGZ,OAAO,CAAC,MAAM;IACjC,OAAOG,YAAY,CAChBE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,CAAC,CAAC;IAAA,CAClCC,MAAM,CAAC,CAACC,GAAG,EAAEH,CAAC,KAAKG,GAAG,GAAGH,CAAC,CAACI,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB,oBACEJ,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,SAAW,CAAC,eAChBpB,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,gBAAc,EAACf,WAAe,CAAC,eAClCL,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,kBAAgB,EAACR,aAAiB,CAAC,eACtCZ,KAAA,CAAAc,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,iBAAe,EAACP,YAAgB,CAChC,CAAC;AAEV,CAAC;AAED,eAAeV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}